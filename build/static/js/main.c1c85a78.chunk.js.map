{"version":3,"sources":["Todolist/Todoing.js","Todolist/Todoinput.js","Todolist/Todoed.js","Todolist/Todolist.js","index.js"],"names":["Todoing","this","props","todo","length","className","map","item","idx","key","type","defaultChecked","onClick","e","complete","delTodo","Component","defaultProps","Todoinput","handleInput","keyCode","addTodo","target","value","handleChange","setState","name","state","n1","n2","onChange","onKeyDown","Todoed","todoed","doing","Todolist","addItem","msg","console","log","delitem","a","splice","delitemed","comdix","checked","doingdix","todo1","JSON","parse","localStorage","getItem","todoed1","setItem","stringify","ReactDOM","render","document","getElementById"],"mappings":"2PAEqBA,E,iLACP,IAAD,OACL,OACI,6BACI,6DAAUC,KAAKC,MAAMC,KAAKC,QAC1B,wBAAIC,UAAU,QAENJ,KAAKC,MAAMC,KAAKG,KAAI,SAACC,EAAKC,GAAN,OAAY,wBAAIC,IAAKD,GAAMD,EAAf,OAChC,2BAAOG,KAAK,WAAWC,gBAAgB,EAAOC,QAAS,SAACC,GAAK,EAAKX,MAAMY,SAASN,EAAIK,MACrF,4BAAQD,QAAS,WAAK,EAAKV,MAAMa,QAAQP,KAAzC,0B,GATaQ,aAmBrChB,EAAQiB,aAAe,CACnBd,KAAM,I,WCpBWe,E,YACjB,aAAc,IAAD,8BACT,+CAMJC,YAAc,SAACN,GACM,KAAdA,EAAEO,SACD,EAAKlB,MAAMmB,QAAQR,EAAES,OAAOC,QATvB,EAYbC,aAAe,SAACX,GACZ,EAAKY,SAAL,eACKZ,EAAES,OAAOI,KAAOb,EAAES,OAAOC,SAZ9B,EAAKI,MAAQ,CACTC,GAAI,EACJC,GAAI,GAJC,E,sEAiBH,IAAD,OACL,OACI,6BACI,2BAAOH,KAAK,KAAKI,SAAU,SAACjB,GAAD,OAAK,EAAKW,aAAaX,IAAIU,MAAOtB,KAAK0B,MAAMC,GAAIG,UAAW,SAAClB,GAAD,OAAK,EAAKM,YAAYN,IAAIH,KAAK,c,GArB/FM,aCAlBgB,E,iLACP,IAAD,OACL,OACI,6BACI,6DAAU/B,KAAKC,MAAM+B,OAAO7B,QAC5B,wBAAIC,UAAU,QAENJ,KAAKC,MAAM+B,OAAO3B,KAAI,SAACC,EAAKC,GAAN,OAAY,wBAAIC,IAAKD,GAAMD,EAAf,OAClC,2BAAOG,KAAK,WAAWE,QAAS,SAACC,GAAD,OAAK,EAAKX,MAAMgC,MAAM1B,EAAIK,MAC1D,4BAAQD,QAAS,WAAK,EAAKV,MAAMa,QAAQP,KAAzC,0B,GATYQ,aAmBpCgB,EAAOf,aAAe,CAClBgB,OAAQ,I,ICjBSE,E,YACjB,aAAc,IAAD,8BACT,+CA2BJC,QAAU,SAACC,GACP,EAAKZ,SAAS,CACVtB,KAAK,GAAD,mBAAK,EAAKwB,MAAMxB,MAAhB,CAAqBkC,MAE7BC,QAAQC,IAAIF,IAhCH,EAkCbG,QAAU,SAACC,GACP,IAAItC,EAAI,YAAM,EAAKwB,MAAMxB,MACzBA,EAAKuC,OAAOD,EAAE,GACd,EAAKhB,SAAS,CACVtB,KAAKA,KAtCA,EAyCbwC,UAAY,SAACF,GACT,IAAIR,EAAM,YAAM,EAAKN,MAAMM,QAC3BA,EAAOS,OAAOD,EAAE,GAChB,EAAKhB,SAAS,CACVQ,OAAOA,KA7CF,EAgDbW,OAAS,SAACH,EAAE5B,GACR,IAAIoB,EAAO,GAAD,mBAAK,EAAKN,MAAMM,QAAhB,CAAuB,EAAKN,MAAMxB,KAAKsC,KAC7CtC,EAAI,YAAM,EAAKwB,MAAMxB,MACzBA,EAAKuC,OAAOD,EAAE,GACd,EAAKhB,SAAS,CACVtB,KAAKA,EACL8B,OAAOA,IAEXpB,EAAES,OAAOuB,SAAU,GAxDV,EA0DbC,SAAW,SAACL,EAAE5B,GACV,IAAIV,EAAK,GAAD,mBAAK,EAAKwB,MAAMxB,MAAhB,CAAqB,EAAKwB,MAAMM,OAAOQ,KAC3CR,EAAM,YAAM,EAAKN,MAAMM,QAC3BA,EAAOS,OAAOD,EAAE,GAChB,EAAKhB,SAAS,CACVQ,OAAOA,EACP9B,KAAKA,IAETU,EAAES,OAAOuB,SAAU,GAhEnB,EAAKlB,MAAQ,CACTxB,KAAM,GACN8B,OAAO,IAJF,E,kFAST,IAAIc,EAAQC,KAAKC,MAAMC,aAAaC,QAAQ,SACxCC,EAAUJ,KAAKC,MAAMC,aAAaC,QAAQ,WAC3CJ,GACC9C,KAAKwB,SAAS,CACVtB,KAAK,YAAK4C,KAGfK,GACCnD,KAAKwB,SAAS,CACVQ,OAAO,YAAKmB,O,2CAMpBF,aAAaG,QAAQ,OAAOL,KAAKM,UAAUrD,KAAK0B,MAAMxB,OACtD+C,aAAaG,QAAQ,SAASL,KAAKM,UAAUrD,KAAK0B,MAAMM,W,+BA4CxD,OACI,6BACI,kBAAC,EAAD,CAAWZ,QAASpB,KAAKmC,UACzB,kBAAC,EAAD,CAAStB,SAAUb,KAAK2C,OAAQ7B,QAASd,KAAKuC,QAASrC,KAAMF,KAAK0B,MAAMxB,OACxE,kBAAC,EAAD,CAAQ+B,MAAOjC,KAAK6C,SAAU/B,QAASd,KAAK0C,UAAWV,OAAQhC,KAAK0B,MAAMM,c,GA1EpDjB,aCAtCuC,IAASC,OAAO,kBAAC,EAAD,MAAcC,SAASC,eAAe,W","file":"static/js/main.c1c85a78.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nexport default class Todoing extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>正在进行：{this.props.todo.length}</h1>\r\n                <ul className=\"list\">\r\n                    {\r\n                        this.props.todo.map((item,idx)=><li key={idx}>{item}----\r\n                        <input type='checkbox' defaultChecked={false} onClick={(e)=>{this.props.complete(idx,e)}}/>\r\n                        <button onClick={()=>{this.props.delTodo(idx)}}>删除</button></li>)\r\n                    }\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nTodoing.propTypes = {\r\n    todo: PropTypes.array\r\n}\r\nTodoing.defaultProps = {\r\n    todo: []\r\n}","import React, { Component } from 'react'\r\n\r\nexport default class Todoinput extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            n1: 0,\r\n            n2: 0\r\n        }\r\n    }\r\n    handleInput = (e)=>{\r\n        if(e.keyCode === 13){\r\n            this.props.addTodo(e.target.value);\r\n        }\r\n    }\r\n    handleChange = (e)=>{\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <input name=\"n1\" onChange={(e)=>this.handleChange(e)} value={this.state.n1} onKeyDown={(e)=>this.handleInput(e)} type=\"text\"/>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nexport default class Todoed extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>已经完成：{this.props.todoed.length}</h1>\r\n                <ul className=\"list\">\r\n                    {\r\n                        this.props.todoed.map((item,idx)=><li key={idx}>{item}----\r\n                        <input type='checkbox' onClick={(e)=>this.props.doing(idx,e)}/>\r\n                        <button onClick={()=>{this.props.delTodo(idx)}}>删除</button></li>)\r\n                    }\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nTodoed.propTypes = {\r\n    todoed: PropTypes.array\r\n}\r\nTodoed.defaultProps = {\r\n    todoed: []\r\n}","import React, { Component } from 'react'\r\nimport Todoing from './Todoing';\r\nimport Todoinput from './Todoinput';\r\nimport Todoed from './Todoed';\r\n\r\nexport default class Todolist extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            todo: [],\r\n            todoed:[]\r\n        }\r\n    }\r\n\r\n    componentWillMount(){\r\n        var todo1 = JSON.parse(localStorage.getItem('todo'));\r\n        var todoed1 = JSON.parse(localStorage.getItem('todoed'));\r\n        if(todo1){\r\n            this.setState({\r\n                todo: [...todo1]\r\n            });\r\n        }\r\n        if(todoed1){\r\n            this.setState({\r\n                todoed: [...todoed1]\r\n            });\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        localStorage.setItem(\"todo\",JSON.stringify(this.state.todo));\r\n        localStorage.setItem(\"todoed\",JSON.stringify(this.state.todoed));\r\n    }\r\n\r\n    addItem = (msg)=>{\r\n        this.setState({\r\n            todo:[...this.state.todo,msg]\r\n        })\r\n        console.log(msg);\r\n    }\r\n    delitem = (a) =>{\r\n        var todo =[...this.state.todo];\r\n        todo.splice(a,1);\r\n        this.setState({\r\n            todo:todo\r\n        })\r\n    }\r\n    delitemed = (a) =>{\r\n        var todoed =[...this.state.todoed];\r\n        todoed.splice(a,1);\r\n        this.setState({\r\n            todoed:todoed\r\n        })\r\n    }\r\n    comdix = (a,e)=>{\r\n        var todoed=[...this.state.todoed,this.state.todo[a]];\r\n        var todo =[...this.state.todo];\r\n        todo.splice(a,1);\r\n        this.setState({\r\n            todo:todo,\r\n            todoed:todoed\r\n        })\r\n        e.target.checked = false;\r\n    }\r\n    doingdix = (a,e) =>{\r\n        var todo=[...this.state.todo,this.state.todoed[a]];\r\n        var todoed =[...this.state.todoed];\r\n        todoed.splice(a,1);\r\n        this.setState({\r\n            todoed:todoed,\r\n            todo:todo\r\n        })\r\n        e.target.checked = false;\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Todoinput addTodo={this.addItem}/>\r\n                <Todoing complete={this.comdix} delTodo={this.delitem} todo={this.state.todo}/>\r\n                <Todoed doing={this.doingdix} delTodo={this.delitemed} todoed={this.state.todoed}/>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Todolist from './Todolist/Todolist';\n\nReactDOM.render(<Todolist />, document.getElementById('root'));\n\n"],"sourceRoot":""}